---
layout: post
title:  "Set"
tag: map 
---
[NavigableSet](https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/NavigableSet.html)

| Prefix | Suffix | Parameter | Comparison |
|-------|--------|---------|---------|
| ceiling | | e | >= |
| floor | | e | <= |
| higher | | e | > |
| lower | | e | < |
| head | set | toElement | < |
| head | set | toElement, inclusive | < or <= |
| tail | set | fromElement | >= |
| tail | set | fromElement, inclusive | > or >= |
| pollFirst | | | lowest |
| pollLast | | | highest |
| descending | iterator | | |
| descending | set | | |
| sub | set | fromElement, fromInclusive, toElement, toInclusive | |

[SortedSet](https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/SortedSet.html)

| Prefix | Suffix | Parameter | Comparison |
|-------|--------|---------|---------|
| head | set | toElement | < |
| tail | set | fromElement | >= |
| first | | | lowest |
| last | | | highest |
| sub | set | fromElement, toElement | [) |

[BitSet](https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/util/BitSet.html)

[Distribute Candies][distribute-candies]

{% highlight java %}
private static final int MAX_NUM_TYPES = 2 * (int)1e5 + 1;

public int distributeCandies(int[] candyType) {
    BitSet bitset = new BitSet(MAX_NUM_TYPES);
    for (int c : candyType) {
        bitset.set(c + MAX_NUM_TYPES / 2);
    }
    return Math.min(candyType.length / 2, bitset.cardinality());
}
{% endhighlight %}

[distribute-candies]:https://leetcode.com/problems/distribute-candies/
