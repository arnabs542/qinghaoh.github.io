---
layout: post
title:  "String"
tags: string
---
# Lydon Word

A [Lyndon word](https://en.wikipedia.org/wiki/Lyndon_word) is a nonempty string that is strictly smaller in lexicographic order than all of its rotations.

[Largest Subarray Length K][largest-subarray-length-k]

{% highlight java %}
{% endhighlight %}

[Sentence Screen Fitting][sentence-screen-fitting]

{% highlight java %}
public int wordsTyping(String[] sentence, int rows, int cols) {
    String s = String.join(" ", sentence) + " ";
    int start = 0, l = s.length();
    for (int i = 0; i < rows; i++) {
        start += cols;
        if (s.charAt(start % l) == ' ') {
            start++;
        } else {
            while (start > 0 && s.charAt((start - 1) % l) != ' ') {
                start--;
            }
        }
    }

    return start / s.length();
}
{% endhighlight %}

[Decoded String at Index][decoded-string-at-index]

{% highlight java %}
public String decodeAtIndex(String S, int K) {
    long len = 0;
    int n = S.length();

    // gets the length of decoded String
    int i = 0;
    while (i < n) {
        char c = S.charAt(i);
        if (Character.isDigit(c)) {
            len *= c - '0';
        } else {
            len++;
        }

        if (len >= K) {
            break;
        }
        i++;
    }

    // think backwards
    while (i >= 0) {
        char c = S.charAt(i);
        if (Character.isDigit(c)) {
            len /= c - '0';
            K %= len;
        } else {
            if (K % len == 0) {
                return Character.toString(c);
            }
            len--;
        }
        i--;
    }

    return "";
}
{% endhighlight %}

For example, `s = "leet2code3", k = 10`

[decoded-string-at-index]: https://leetcode.com/problems/decoded-string-at-index/
[largest-subarray-length-k]: https://leetcode.com/problems/largest-subarray-length-k/
[sentence-screen-fitting]: https://leetcode.com/problems/sentence-screen-fitting/
